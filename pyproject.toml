[tool.poetry]
name = "grabber"
version = "0.1.0"
description = ""
authors = ["BohdanKostivKrootl <bohdan.kostiv@krootl.com>"]
readme = "README.md"
packages = [{include = "app", from = "src"}]


[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"
ruff = "^0.12.0"
mypy = "^1.16.1"


[tool.poetry.dependencies]
python = "^3.11"
psycopg = {extras = ["binary", "pool"], version = "^3.2.9"}
structlog = "^25.4.0"
yt-dlp = "^2025.9.5"
python-telegram-bot = "^22.4"
aiohttp = "^3.13.0"
requests = "^2.32.5"



[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | venv
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 120

[tool.ruff]
exclude = [
  ".bzr", ".direnv", ".eggs", ".git", ".hg", ".mypy_cache", ".nox", ".pants.d",
  ".ruff_cache", ".svn", ".tox", ".venv", "__pypackages__", "_build", "buck-out",
  "build", "dist", "venv", "__pycache__",
  "src/app/db/migrations/versions/*.py",
  "src/app/__main__.py",
  "src/app/asgi.py",
  "src/app/lib/enums.py",
]
fix = true
line-length = 120
src = ["src"]
target-version = "py311"

[tool.ruff.lint]
fixable = ["ALL"]
ignore = [
  "E501", "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
  "D202", "D203", "D213", "D205", "D415", "UP037", "A003", "B010", "B008",
  "B904", "RUF012", "ANN401", "ANN102", "ANN101", "PLR0913", "PLR2004",
  "FBT001", "FBT002", "FBT003", "ARG002", "ARG001", "TD002", "TD003",
  "FIX002", "PGH003", "RUF006", "SLF001", "PT007", "PT004", "PT005", "S603",
  "PLW2901", "PLC0415", "FBT", "PT", "TD", "PERF203", "N818"
]
select = ["ALL"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
  "classmethod",
  "sqlalchemy.ext.declarative.declared_attr",
  "sqlalchemy.orm.declared_attr.directive",
  "sqlalchemy.orm.declared_attr",
]

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.lint.per-file-ignores]
"*/migrations/*.py" = ["D104", "D103", "D205", "D212"]
"__init__.py" = ["F401", "D104"]
"src/app/db/migrations/versions/*.py" = ["ANN201", "INP001"]


[tool.slotscheck]
strict-imports = false

[tool.mypy]
disallow_any_generics = false
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
exclude = '''(?x)(
^build/
|^dist/
|^.venv/
|^migrations/
)
'''
implicit_reexport = false
plugins = []
strict = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
disallow_untyped_calls = false
disallow_untyped_decorators = false
module = ["aisoql.*"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "sqlalchemy.*",
  "uvicorn.*",
  "aiohttp.*",
  "uvloop",
  "uvloop.*",
]

[[tool.mypy.overrides]]
ignore_errors = true
module = ["app.db.migrations.*", "app.lib.dto.*", "app.db.models.*"]


[tool.pyright]
include = ["src/app"]
reportGeneralTypeIssues = false
